{"mappings":"AAWA,IAAMA,WAAaC,SAASC,cAAc,mBAEpCC,KAAOF,SAASC,cAAc,YAWjB,SAAVE,cAAcC,GACnBA,EAAIC,iBAEJC,QAAQC,IAAKH,EAAII,eACjB,IAAuBC,EAAAL,EAAII,cAAcE,SAAjCC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,KACdN,QAAQC,IAAII,GAGZE,eAAeF,EAAKG,MAAOF,EAAKE,OAC/BC,MAAK,SAAAC,G,OAAQd,KAAKe,UAAYC,aAAaF,EAAKG,SAASC,Y,IACzDC,OAAM,SAAAC,G,OAAOhB,QAAQiB,MAAMD,E,IAEDE,SAAlB,W,OAAMzB,WAAW0B,O,IAeQ,SAA7BZ,iB,IAAeF,EAAAe,UAAAC,OAAA,YAAAD,UAAA,GAASA,UAAA,GAAF,GAAId,EAAAc,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EAChCE,EAAU,+BACVC,EAAS,kCAMbC,EAAS,IAAIC,gBAAgB,CACvBC,IAAKH,EACLI,EAAGtB,EACHC,KAAMA,EACNsB,KAAM,OAGV,OAAOC,MAAM,GAA6BC,OAA1BR,EAAS,mBAAwBQ,OAAPN,IACrCf,MAAK,SAAAsB,GAEF,GADA/B,QAAQgC,IAAID,IACPA,EAAKE,GACN,MAAM,IAAIC,MAAMH,EAAKI,YAGzB,OAAOJ,EAAKK,M,IAmBxB,SAASxB,aAAayB,GACd,OAAOA,EAAIC,KAAI,SAAAC,G,IAAGC,EAAID,EAAJC,KAAIC,EAAAF,EAAEG,IAAOC,EAASF,EAATE,UAASC,EAAAH,EAAEI,UAAaC,EAAIF,EAAJE,KAAMC,EAAIH,EAAJG,K,MAC7D,+BAC0BjB,OAAdiB,EAAK,WACXjB,OADoBgB,EAAK,wBAEzBhB,OADAU,EAAK,2BAELV,OADAgB,EAAK,2BACKhB,OAAVa,EAAU,uB,IACZK,KAAK,G,CApFrBvD,WAAWwD,iBAAiB,SAAUpD","sources":["src/script.js"],"sourcesContent":["// https://uk.wikipedia.org/wiki/SOAP\n// https://itstatti.in.ua/stvorennya-sajtiv/77-shcho-take-proksi-server-i-navishcho-vin-potriben.html\n// https://www.postman.com/downloads/\n// https://www.weatherapi.com/docs/\n// https://handlebarsjs.com/guide/\n//\n\n// JS DOCcomment /** + emmit\n\n\n\nconst searchForm = document.querySelector('.js-search-form');\n// --------------------наш створений контейнер---------------------\nconst list = document.querySelector('.js-list');\n\nsearchForm.addEventListener('submit', handlerSearch);\n\n/**\n * Handler search weather form\n//  * @param {*} evt\n */\n\n\n// --------------------Створю\\ колбек функцію----------------------------\nfunction handlerSearch(evt) {\n    evt.preventDefault();\n\n    console.dir (evt.currentTarget);\n    const { city, days } = evt.currentTarget.elements;\n    console.dir(city);     \n    // console.dir(days);\n\n    serviceWeather(city.value, days.value)\n    .then(data => list.innerHTML = createMarkup(data.forecast.forecastday))\n    .catch(err => console.error(err))\n    // ---------Очищуємо форму після введення---------------------\n    .finally(() => searchForm.reset())\n                \n        }\n\n\n/**\n * Service weather API\n * @param {String} city\n * @param {Number} days\n * @returns {Promise} response data\n */\n\n\n\n// створюємо функцію, яка робить запит на бекенд \nfunction serviceWeather(city = '', days = 1){\n    const BASE_URL ='http://api.weatherapi.com/v1';\n    const API_KEY ='3ad27d6553fe4b99a70183810231605';\n// ------------1-й варіант-------------------------------\n    // return fetch(`${BASE_URL}/forecast.json?key=${API_KEY}&q=${city}&days=${days}&lang=uk`).then(resp => console.log(resp))\n\n// -----------2-й варіант-------------------------------\n\nconst params = new URLSearchParams({\n            key: API_KEY,\n            q: city,\n            days: days,\n            lang: 'uk'\n        })\n        // console.log(params.toString());\n        return fetch(`${BASE_URL}/forecast.json?${params}`)\n            .then(resp => {\n                console.log(resp);\n                if (!resp.ok) {\n                    throw new Error(resp.statusText)\n                }\n    \n                return resp.json()\n            })\n    }\n\n// serviceWeather('rctunht',5)\n//     .then(data =>console.log(data))\n//     .catch(err => console.error(err))\n\n\n\n\n    // ---------------Створюємо розмітку--------------\n\n/**\n * Create forecast card\n * @param {Array} arr\n * @returns {String} HTML markup\n */\n\n    function createMarkup(arr) {\n            return arr.map(({ date, day: { avgtemp_c, condition: { text, icon } } }) => \n            `<li>\n            <img src=\"${icon}\" alt=\"${text}\">\n            <h2>${date}</h2>\n            <h3>${text}</h3>\n            <h3>${avgtemp_c}</h3>\n        </li>`).join('');\n        }\n\n\n\n\n"],"names":["searchForm","document","querySelector","list","handlerSearch","evt","preventDefault","console","dir","currentTarget","_elements","elements","city","days","serviceWeather","value","then","data","innerHTML","createMarkup","forecast","forecastday","catch","err","error","finally","reset","arguments","length","BASE_URL","API_KEY","params","URLSearchParams","key","q","lang","fetch","concat","resp","log","ok","Error","statusText","json","arr","map","param","date","_day","day","avgtemp_c","_condition","condition","text","icon","join","addEventListener"],"version":3,"file":"index.9da6ffac.js.map"}